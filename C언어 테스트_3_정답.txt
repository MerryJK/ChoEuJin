1. 객체지향 프로그래밍의 특징을 말하시오
클래스와 인스턴스 
클래스 : 어떤 문제를 해결하기 위한 데이터를 만들기 위해 추상화를 거쳐 집단에 속하는
속성(attribute)과 행위(behavior)를 변수와 메서드로 정의한 것.
인스턴스(객체) : 클래스에서 정의한 것을 토대로 실제 메모리상에 할당된 것

추상화 : 불필요한 정보는 숨기고 중요한 정보만을 표현함으로써 공통의 속성이나 기능을 
묶어서 이름을 붙이는 것(abstract와는 다른 의미) 

캡슐화 : 코드를 재수정 없이 재활용하는 것, 프로그램 코드에서 변수와 함수를 재활용하기에는 분산되어
있기 때문에 재활용이 어려웠으나 캡슐화를 통해 관련된 기능과 특성을 한 곳에 모으고 분류하기 때문에
재활용이 원활해진다.

상속 : 부모클래스의 속성과 기능을 그대로 이어받아 사용할 수 있게하고 
기능의 일부분을 변경해야 할 경우 상속받은 자식 클래스에서 해당 기능만 
다시 수정(재정의)하여 사용할 수 있게 하는 것이다.

다형성 : 하나의 변수명, 함수명 등이 상황에 따라 다른 의미로 해석될 수 있는 것
오버라이딩 - 부모클래스의 메서드와 같은 이름, 매개변수를 재정의 하는 것.
오버로딩 - 같은 이름의 함수를 여러개 정의하고, 매개변수의 타입과 개수를 다르게 하여 매개변수에 
따라 다르게 호출할 수 있게 하는 것. 

2. 객체지향 프로그래밍의 장단점을 말해보시오.
장점 : 코드를 재사용하기 용이하다, 유지보수가 쉽다, 
묘듈화해서 각자 작업별로 분담할 수 있는 프로젝트(규모가 커질수록)에 적합하다.

단점 : 처리속도가 상대적으로 느리다, 객체가 많으면 용량이 커질 수 있다, 
설계시 많은 시간과 노력이 필요하다.

3. 디자인 패턴 중 Singleton 패턴에 대해 설명하시오.
어떤 클래스가 최초 한번만 메모리를 할당하고(Static) 그 메모리에 
인스턴스를 만들어 사용하는 디자인패턴.

4. 지뢰 찾기를 만드시오(std::vector, 재귀호출 반드시 사용)

